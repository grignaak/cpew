#!/bin/bash

# Make a soft-link to a common eclipse settings directory.  When changing
# eclipse settings, it changes across all linked workspaces.
#
# This assumes all workplaces are in $WORKSPACE_ROOT, which is also assumed to
# have been "locked" by chmod a-w to prevent accidently making a workspace in
# eclipse.
#
# This has not been tested when multiple workspaces are open at the same time.

### settings ###

WORKSPACE_ROOT=/Volumes/Unix/workspaces/
TEMPLATE=~/tools/ECLIPSE_WS_TEMPLATE

function die {
     echo "$1"; exit 1
}

### read and check input ###

if [ "$#" = "1" ]; then
    DESTINATION="$1"
elif [ "$#" = "2"]; then
    TEMPLATE="$1"
    DESTINATION="$2"
else
    die "usage: $0 [-i] old-workspace new-workspace"
fi

[ $(whoami) != "root" ] || die "Don't do this as root"
[ -d "$WORKSPACE_ROOT" ] || die "$WORKSPACE_ROOT needs to be a directory"
[[ ( -d "$TEMPLATE" ) && ( -r "$TEMPLATE" ) ]] || die "$TEMPLATE is not a readable directory"
[ $(dirname "$DESTINATION") = "." ] || die "$DESTINATION should be a directory name to go under $WORKSPACE_ROOT"



### create the workspace ###

SETTINGS=.metadata/.plugins/org.eclipse.core.runtime/.settings
SETTINGS_DIR=`dirname $SETTINGS`

function un-lock {
    chmod a+w "$WORKSPACE_ROOT"
}
function re-lock {
    chmod a-w "$WORKSPACE_ROOT"
}
function scramble {
     re-lock; die "$1"
}


un-lock || scramble "Could not unlock $WORKSPACE_ROOT"

mkdir "$WORKSPACE_ROOT/$DESTINATION" || scramble "Could not create directory $DESTINATION"
mkdir -p "$WORKSPACE_ROOT/$DESTINATION/$SETTINGS_DIR" || scramble "Could not create eclipse settings directory"

ln -s "$TEMPLATE/$SETTINGS" "$WORKSPACE_ROOT/$DESTINATION/$SETTINGS_DIR" || scramble "Could not copy old settings"

re-lock || die "Could not re-lock $WORKSPACE_ROOT/$DESTINATION"


### thank you come again ###

echo New workspace created. Now start your Eclipse and point it to the $WORKSPACE_ROOT/$DESTINATION workspace

